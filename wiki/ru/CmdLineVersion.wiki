#summary Cmdline version (apg-cl.exe)

= Консольная версия (apg-cl.exe) =

<wiki:toc max_depth="3" />

== Назначение ==

Создана специально для использования в скриптах и обладает тем же функционалом, что и GUI-версия генератора.

== Использование ==

http://awesome-password-generator.googlecode.com/svn/wiki/pics/cmdlineBuilderUsage.png

Для этого нужно:
  # Запустить GUI-версию (`Awesome Password Generator.exe`), настроить там длину пароля, количество, используемые наборы символов и прочее;
  # Кликнуть `Command line builder`, выбрать вариант вывода паролей: в консоль или в файл (имя файла всегда берется из раздела `Bulk password generation`);
  # Запустить `apg-cl.exe` с одной из сгенерированных строк в качестве параметров, например команда
{{{
apg-cl.exe -q:5 -l:10 "-c:enL,digits" -d:c
}}}
  сгенерирует (в консоль) 5 паролей длиной в 10 символов, состоящих из цифр и строчных латинских букв.

Кстати, в качестве бонуса: хотя в GUI-версии генератора и нет русских наборов символов (разве что вручную забивать их в User-defined charset), консольная версия может генерировать русские пароли - для этого в параметре *`-c`* (*`--charsets`*) нужно использовать наборы символов *`ruL`* (строчные) и *`ruU`* (прописные), например:
{{{
apg-cl.exe -q:5 -l:10 "-c:ruL,ruU,digits" -d:c
}}}

== Коды возврата (errorlevel) ==
|| *Код* || *Описание* ||
|| 0 || OK (команда выполнена успешно) ||
|| 1 || Ошибка в параметрах ||
|| 2 || Невозможно зарезервировать память ||
|| 3 || Невозможно сохранить пароли в файл ||

<font color="red">Внимание:</font> если при выполнении `agp-cl.exe` возникла ошибка, то она будет выведена на экран (в консоль). Учтите это при генерации паролей в консоль - есть шанс получить вместо паролей сообщение об ошибке! Проверяйте `errorlevel` после вызова программы!

== Примеры на batch, !PowerShell и C# ==

=== Командная строка и batch-скрипт ===

Генерируем 5 паролей в файл c:\passwords.txt:
{{{
@echo off

apg-cl.exe -q:5 -l:10 "-c:enL,digits" -ett -ecc "-d:f:r:c:\passwords.txt"

if %errorlevel%==0 goto okey
echo.
echo Some error!
exit

:okey
type c:\passwords.txt
}}}
Результат:
{{{
1pyyi44wew
6afplyx69w
52p5316x8l
3530fe72e2
dmp4tj7h5o
}}}

Если пароли надо обрабатывать в скрипте "на лету", не используя промежуточный файл, сделать это можно так:
{{{
@echo off
setlocal enabledelayedexpansion

set c=0
for /f "usebackq delims=" %%i in (`"apg-cl.exe -q:5 -l:10 -c:enL,digits -d:c"`) do (
	set /a c=!c!+1
	echo Password #!c!: %%i
)
}}}
Результат:
{{{
Password #1: 1pyyi44wew
Password #2: 6afplyx69w
Password #3: 52p5316x8l
Password #4: 3530fe72e2
Password #5: dmp4tj7h5o
}}}

<font color="red">Обратите внимание</font> на две пары скобок вокруг команды вызова генератора: снаружи одинарные *правые* ковычки (кнопка с тильдой), а внутри - обычные двойные. А вот внутри команды все двойные ковычки *удалены*!

=== !PowerShell ===

Генерируем 5 паролей в файл c:\passwords.txt:
{{{
./apg-cl.exe -q:5 -l:10 "-c:enL,digits" -ett -ecc "-d:f:r:c:\passwords.txt"

if($LASTEXITCODE -ne 0)
{
	write-host "`nSome error!" -foreground red
	exit
}

get-content c:\passwords.txt
}}}
Результат:
{{{
1pyyi44wew
6afplyx69w
52p5316x8l
3530fe72e2
dmp4tj7h5o
}}}

Обходимся без файла - обрататываем пароли в скрипте:
{{{
$passwords=./apg-cl.exe -q:5 -l:10 "-c:enL,digits" -ett -ecc -d:c

if($LASTEXITCODE -ne 0)
{
	write-host "Some error!" -foreground red
	$passwords	# display apg-cl output
	exit
}

$c=0
foreach($password in $passwords)
{
	$c++
	echo "Password #$c`: $password"
}
}}}
Результат:
{{{
Password #1: 1pyyi44wew
Password #2: 6afplyx69w
Password #3: 52p5316x8l
Password #4: 3530fe72e2
Password #5: dmp4tj7h5o
}}}

=== C# ===


== Ограничения и предостережения ==

Хотя функционал GUI- и консольной версий генератора одинаков, в последней есть некоторые проблемы с пользовательским набором символов (в параметре `-udc` или `--userDefinedCharset`) и с именем файла для сохранения паролей (в параметре `-o:f:` или `--destination:file:`):
  * Невозможность использования всех Unicode-символов;
  * Проблемы с русскими символами - они поддерживаются, но осторожнее с кодировками!
  * Проблемы со спец-символами: использовать не рекомендуется.
